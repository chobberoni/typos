let getDuration,baseStorybookUrl,progressBar;_34e‍.x([["initial",()=>initial],["preparing",()=>preparing],["starting",()=>starting],["uploading",()=>uploading],["success",()=>success],["skipped",()=>skipped],["invalid",()=>invalid],["failed",()=>failed]]);_34e‍.w("../../lib/tasks",[["getDuration",["getDuration"],function(v){getDuration=v}]]);_34e‍.w("../../lib/utils",[["baseStorybookUrl",["baseStorybookUrl"],function(v){baseStorybookUrl=v}],["progress",["progressBar"],function(v){progressBar=v}]]);


       const initial = {
  status: 'initial',
  title: 'Publish your built Storybook',
};

       const preparing = ctx => ({
  status: 'pending',
  title: 'Publishing your built Storybook',
  output: `Retrieving target location`,
});

       const starting = ctx => ({
  status: 'pending',
  title: 'Publishing your built Storybook',
  output: `Starting publish`,
});

       const uploading = ctx => ({
  status: 'pending',
  title: 'Publishing your built Storybook',
  output: `[${progressBar(ctx.percentage)}] ${ctx.percentage}%`,
});

       const success = ctx => ({
  status: 'success',
  title: `Publish complete in ${getDuration(ctx)}`,
  output: `View your Storybook at ${baseStorybookUrl(ctx.isolatorUrl)}`,
});

       const skipped = ctx => ({
  status: 'skipped',
  title: 'Publish your built Storybook [skipped]',
  output: `Using hosted Storybook at ${ctx.options.storybookUrl}`,
});

       const invalid = ctx => ({
  status: 'error',
  title: 'Publishing your built Storybook',
  output: `Invalid Storybook build at ${ctx.sourceDir} (check the build log)`,
});

       const failed = ctx => ({
  status: 'error',
  title: 'Publishing your built Storybook',
  output: `Failed to upload ${ctx.path}`,
});
